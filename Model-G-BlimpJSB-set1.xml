<?xml version="1.0"?>
<!--
  Model-G-Blimp model for FlightGear.

  Copyright (C) 2006 - 2013  Anders Gidenstam  (anders(at)gidenstam.org)
  This file is licensed under the GPL license version 2 or later.
-->
<PropertyList>

 <sim>

  <description> 1900's Model-G-Blimp</description>
  <author>Anders Gidenstam</author>
  <aircraft-version>$Id: Model-G-BlimpJSB-set.xml,v 1.29 2013/01/07 21:00:19 anders Exp $</aircraft-version>

  <status type="string">beta</status>
  <rating>
   <FDM type="int">3</FDM>
   <systems type="int">2</systems>
   <cockpit type="int">3</cockpit>
   <model type="int">3</model>
  </rating>

  <flight-model>jsb</flight-model>
  <aero>Model-G-BlimpJSB</aero>

  <presets>
   <onground>true</onground>
  </presets>
  <startup>
   <splash-texture>Aircraft/Model-G-Blimp/blimp-splash.png</splash-texture>
  </startup>

  <sound>
   <audible>false</audible>
   <path>Aircraft/Model-G-Blimp/Sounds/Model-G-Blimp-sound.xml</path>
  </sound>

  <model>
   <path>Aircraft/Model-G-Blimp/Models/model-g-blimp.xml</path>
  </model>

  <systems>
   <electrical>
    <path/>
   </electrical>
   <static>
    <name>static</name>
    <number>0</number>
    <tau>1</tau>
   </static>
  </systems>

  <instrumentation>
   <path>Aircraft/Model-G-Blimp/Systems/instrumentation.xml</path>
  </instrumentation>

  <view n="0">
   <internal archive="y">true</internal>
   <config>
    <!-- x/y/z == right/up/back -->
    <x-offset-m archive="y" type="double">0.0</x-offset-m>
    <y-offset-m archive="y" type="double">1.925</y-offset-m>  <!-- up-down -->
    <z-offset-m archive="y" type="double">1.005</z-offset-m> <!-- fore-back -->
    <pitch-offset-deg>-15.5</pitch-offset-deg>>
   </config>
  </view>

  <chase-distance-m type="double" archive="y">-50.0</chase-distance-m>

  <!-- Aircraft specific help. -->
  <help include="help.xml"/>

  <multiplay>
   <generic>
    <float n="0" type="float"> 1.0 </float>
    <float n="1" type="float"> 1.0 </float>
    <float n="2" type="float"> 1.0 </float>
    <float n="3" type="float"> 1.0 </float>
   </generic>
  </multiplay>

  <menubar>
   <default>
    <menu n="100">
     <label>Model-G-Blimp</label>
     <item>
      <label>About</label>
      <binding>
       <command>nasal</command>
       <script>ZF.about()</script>
      </binding>
     </item>
    </menu>
   </default>
  </menubar>

  <rendering>
   <shaders>
    <aircraft>
     <balloon-envelope>
      <quality-level type="float" userarchive="y">1.0</quality-level>
     </balloon-envelope>
    </aircraft>
   </shaders>
  </rendering>
 </sim>

 <payload>
  <weight>
   <name type="string">Pilot</name>
   <weight-lb alias="/fdm/jsbsim/inertia/pointmass-weight-lbs[0]"/>
   <min-lb type="double">0.0</min-lb>
   <max-lb type="double">270.0</max-lb>
  </weight>
  <weight>
   <name type="string">Payload</name>
   <weight-lb alias="/fdm/jsbsim/inertia/pointmass-weight-lbs[1]"/>
   <min-lb type="double">0.0</min-lb>
   <max-lb type="double">300.0</max-lb>
  </weight>
  <weight>
   <name type="string">Ballast</name>
   <weight-lb alias="/fdm/jsbsim/inertia/pointmass-weight-lbs[2]"/>
   <min-lb type="double">0.0</min-lb>
   <max-lb type="double">1200.0</max-lb>
  </weight>

 <nasal>
  <ZF>
   <file>Aircraft/Model-G-Blimp/Systems/ZF.nas</file>
  </ZF>
  <!-- Instruments>
   <file>Aircraft/ZF_Navy_free_balloon/Systems/electrical.nas</file>
  </Instruments -->
 </nasal>

 <input>
  <keyboard>
   <!-- Keyboard commands -->
   <key n="68">
    <name>D</name>
    <desc>Drop 1% ballast</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Dropping ballast!");
       setprop(ZF.ballast, 0.99 * getprop(ZF.ballast));
     </script>
    </binding>
   </key>
   <key n="77">
    <name>M</name>
    <desc>Gain ballast</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Gaining ballast! (Cheater! ;)");
       setprop(ZF.ballast, 1.01 * getprop(ZF.ballast));
     </script>
    </binding>
   </key>
   <key n="100">
    <name>d</name>
    <desc>Drop 0.1% ballast</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Dropping ballast!");
       setprop(ZF.ballast, 0.999 * getprop(ZF.ballast));
     </script>
    </binding>
   </key>
   <key n="70">
    <name>F</name>
    <desc>Open gas valve.</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Gas valve open!");
       setprop(ZF.gas_valve, 1.00);
     </script>
    </binding>
   </key>
   <key n="102">
    <name>f</name>
    <desc>Close gas valve.</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Gas valve closed!");
       setprop(ZF.gas_valve, 0.00);
     </script>
    </binding>
   </key>
   <key n="82">
    <name>R</name>
    <desc>Rip envelope</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Enveloped ripped!");
       ZF.ripped = 1;
       setprop(ZF.rip_panel, 50.00);
     </script>
    </binding>
   </key>

   <key n="87"> 
    <name>W</name>
    <desc>Perform on-ground weigh-off.</desc>
    <binding> 
     <command>nasal</command>
     <script>
      ZF.weighoff();
     </script>     
    </binding>
   </key>

   <key n="119"> 
    <name>w</name>
    <desc>Show current on-ground weight.</desc>
    <binding> 
     <command>nasal</command>
     <script>
      ZF.print_wow();
     </script>     
    </binding>
   </key>
  </keyboard>
 </input>

 <instrumentation>
  <oat-indicator>
   <serviceable type="bool">1</serviceable>
   <indicated-oat-degf alias="/fdm/jsbsim/instrumentation/oat-degf"/>
  </oat-indicator>
  <superheat-indicator>
   <serviceable type="bool">1</serviceable>
   <indicated-superheat-degf
       alias="/fdm/jsbsim/instrumentation/superheat-degf"/>
  </superheat-indicator>
 </instrumentation>

</PropertyList>
